{
  "version": 3,
  "sources": ["../../@azure/msal-browser/src/telemetry/BrowserPerformanceMeasurement.ts"],
  "sourcesContent": ["/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { IPerformanceMeasurement, SubMeasurement } from \"@azure/msal-common\";\r\n\r\nexport class BrowserPerformanceMeasurement implements IPerformanceMeasurement {\r\n    private readonly measureName: string;\r\n    private readonly correlationId: string;\r\n    private readonly startMark: string;\r\n    private readonly endMark: string;\r\n\r\n    constructor(name: string, correlationId: string) {\r\n        this.correlationId = correlationId;\r\n        this.measureName = BrowserPerformanceMeasurement.makeMeasureName(\r\n            name,\r\n            correlationId\r\n        );\r\n        this.startMark = BrowserPerformanceMeasurement.makeStartMark(\r\n            name,\r\n            correlationId\r\n        );\r\n        this.endMark = BrowserPerformanceMeasurement.makeEndMark(\r\n            name,\r\n            correlationId\r\n        );\r\n    }\r\n\r\n    private static makeMeasureName(name: string, correlationId: string) {\r\n        return `msal.measure.${name}.${correlationId}`;\r\n    }\r\n\r\n    private static makeStartMark(name: string, correlationId: string) {\r\n        return `msal.start.${name}.${correlationId}`;\r\n    }\r\n\r\n    private static makeEndMark(name: string, correlationId: string) {\r\n        return `msal.end.${name}.${correlationId}`;\r\n    }\r\n\r\n    static supportsBrowserPerformance(): boolean {\r\n        return (\r\n            typeof window !== \"undefined\" &&\r\n            typeof window.performance !== \"undefined\" &&\r\n            typeof window.performance.mark === \"function\" &&\r\n            typeof window.performance.measure === \"function\" &&\r\n            typeof window.performance.clearMarks === \"function\" &&\r\n            typeof window.performance.clearMeasures === \"function\" &&\r\n            typeof window.performance.getEntriesByName === \"function\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Flush browser marks and measurements.\r\n     * @param {string} correlationId\r\n     * @param {SubMeasurement} measurements\r\n     */\r\n    public static flushMeasurements(\r\n        correlationId: string,\r\n        measurements: SubMeasurement[]\r\n    ): void {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                measurements.forEach((measurement) => {\r\n                    const measureName =\r\n                        BrowserPerformanceMeasurement.makeMeasureName(\r\n                            measurement.name,\r\n                            correlationId\r\n                        );\r\n                    const entriesForMeasurement =\r\n                        window.performance.getEntriesByName(\r\n                            measureName,\r\n                            \"measure\"\r\n                        );\r\n                    if (entriesForMeasurement.length > 0) {\r\n                        window.performance.clearMeasures(measureName);\r\n                        window.performance.clearMarks(\r\n                            BrowserPerformanceMeasurement.makeStartMark(\r\n                                measureName,\r\n                                correlationId\r\n                            )\r\n                        );\r\n                        window.performance.clearMarks(\r\n                            BrowserPerformanceMeasurement.makeEndMark(\r\n                                measureName,\r\n                                correlationId\r\n                            )\r\n                        );\r\n                    }\r\n                });\r\n            } catch (e) {\r\n                // Silently catch and return null\r\n            }\r\n        }\r\n    }\r\n\r\n    startMeasurement(): void {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                window.performance.mark(this.startMark);\r\n            } catch (e) {\r\n                // Silently catch\r\n            }\r\n        }\r\n    }\r\n\r\n    endMeasurement(): void {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                window.performance.mark(this.endMark);\r\n                window.performance.measure(\r\n                    this.measureName,\r\n                    this.startMark,\r\n                    this.endMark\r\n                );\r\n            } catch (e) {\r\n                // Silently catch\r\n            }\r\n        }\r\n    }\r\n\r\n    flushMeasurement(): number | null {\r\n        if (BrowserPerformanceMeasurement.supportsBrowserPerformance()) {\r\n            try {\r\n                const entriesForMeasurement =\r\n                    window.performance.getEntriesByName(\r\n                        this.measureName,\r\n                        \"measure\"\r\n                    );\r\n                if (entriesForMeasurement.length > 0) {\r\n                    const durationMs = entriesForMeasurement[0].duration;\r\n                    window.performance.clearMeasures(this.measureName);\r\n                    window.performance.clearMarks(this.startMark);\r\n                    window.performance.clearMarks(this.endMark);\r\n                    return durationMs;\r\n                }\r\n            } catch (e) {\r\n                // Silently catch and return null\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n"],
  "mappings": ";IAOa,sCAAA,+BAA6B;EAMtC,YAAY,MAAc,eAAqB;AAC3C,SAAK,gBAAgB;AACrB,SAAK,cAAc,+BAA8B,gBAC7C,MACA,aAAa;AAEjB,SAAK,YAAY,+BAA8B,cAC3C,MACA,aAAa;AAEjB,SAAK,UAAU,+BAA8B,YACzC,MACA,aAAa;;EAIb,OAAO,gBAAgB,MAAc,eAAqB;AAC9D,WAAO,gBAAgB,IAAI,IAAI,aAAa;;EAGxC,OAAO,cAAc,MAAc,eAAqB;AAC5D,WAAO,cAAc,IAAI,IAAI,aAAa;;EAGtC,OAAO,YAAY,MAAc,eAAqB;AAC1D,WAAO,YAAY,IAAI,IAAI,aAAa;;EAG5C,OAAO,6BAA0B;AAC7B,WACI,OAAO,WAAW,eAClB,OAAO,OAAO,gBAAgB,eAC9B,OAAO,OAAO,YAAY,SAAS,cACnC,OAAO,OAAO,YAAY,YAAY,cACtC,OAAO,OAAO,YAAY,eAAe,cACzC,OAAO,OAAO,YAAY,kBAAkB,cAC5C,OAAO,OAAO,YAAY,qBAAqB;;;;;;;EAShD,OAAO,kBACV,eACA,cAA8B;AAE9B,QAAI,+BAA8B,2BAA0B,GAAI;AAC5D,UAAI;AACA,qBAAa,QAAQ,CAAC,gBAAe;AACjC,gBAAM,cACF,+BAA8B,gBAC1B,YAAY,MACZ,aAAa;AAErB,gBAAM,wBACF,OAAO,YAAY,iBACf,aACA,SAAS;AAEjB,cAAI,sBAAsB,SAAS,GAAG;AAClC,mBAAO,YAAY,cAAc,WAAW;AAC5C,mBAAO,YAAY,WACf,+BAA8B,cAC1B,aACA,aAAa,CAChB;AAEL,mBAAO,YAAY,WACf,+BAA8B,YAC1B,aACA,aAAa,CAChB;UAER;QACL,CAAC;MACJ,SAAQ,GAAG;MAEX;IACJ;;EAGL,mBAAgB;AACZ,QAAI,+BAA8B,2BAA0B,GAAI;AAC5D,UAAI;AACA,eAAO,YAAY,KAAK,KAAK,SAAS;MACzC,SAAQ,GAAG;MAEX;IACJ;;EAGL,iBAAc;AACV,QAAI,+BAA8B,2BAA0B,GAAI;AAC5D,UAAI;AACA,eAAO,YAAY,KAAK,KAAK,OAAO;AACpC,eAAO,YAAY,QACf,KAAK,aACL,KAAK,WACL,KAAK,OAAO;MAEnB,SAAQ,GAAG;MAEX;IACJ;;EAGL,mBAAgB;AACZ,QAAI,+BAA8B,2BAA0B,GAAI;AAC5D,UAAI;AACA,cAAM,wBACF,OAAO,YAAY,iBACf,KAAK,aACL,SAAS;AAEjB,YAAI,sBAAsB,SAAS,GAAG;AAClC,gBAAM,aAAa,sBAAsB,CAAC,EAAE;AAC5C,iBAAO,YAAY,cAAc,KAAK,WAAW;AACjD,iBAAO,YAAY,WAAW,KAAK,SAAS;AAC5C,iBAAO,YAAY,WAAW,KAAK,OAAO;AAC1C,iBAAO;QACV;MACJ,SAAQ,GAAG;MAEX;IACJ;AACD,WAAO;;AAEd;",
  "names": []
}
